name: Main CI/CD Workflow
on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main
env:
  PROJECT_NAME: ${{secrets.PROJECT_NAME}}
  ENVIRONMENT: ${{secrets.ENVIRONMENT}}
  PRIVATE_KEY:

jobs:
    infrastructure-creation:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            actions: write
        defaults:
            run:
                shell: bash
                working-directory: ./infrastructure

        # outputs:
        #   private_key: ${{steps.pem-key.outputs.private_key}}

        steps:
            - name: Code Checkout
              uses: actions/checkout@v4

            - name: AWS configure
              uses: aws-actions/configure-aws-credentials@v4.1.0
              with:
                aws-access-key-id:  ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: Setup terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform init
              id: init
              run: terraform init -backend-config="bucket=${{secrets.TF_STATE_BUCKET}}"

            - name: Terraform format
              id: fmt
              run: terraform fmt -check

            - name: Terrafrom Validate
              id: validate
              run: terraform validate

            - name: Terraform plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile

            - name: Terrafrom plan check
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: Terrafrom apply
            #   if: github.ref == 'refs/heads/main' && github.event_name=='push'
              id: apply
              run: terraform apply -no-color -auto-approve -input=false -parallelism=1  planfile

            - name: Upload Anisble Inventory as Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ansible-inventory
                path: ./ansible/inventory.ini

    ansible-configuration:
        runs-on: ubuntu-latest
        needs: infrastructure-creation
        defaults:
            run:
                shell: bash
                working-directory: ./ansible

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Download Inventory file from artifactory
              uses: actions/download-artifact@v4
              with:
                name: ansible-inventory
                path: ./ansible

            - name: AWS configure
              uses: aws-actions/configure-aws-credentials@v4.1.0
              with:
                aws-access-key-id:  ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: Load Private Key from aws secret manager
              uses: aws-actions/aws-secretsmanager-get-secrets@v2
              id: get-secret
              with:
                secret-ids: |
                    PRIVATE_KEY, ${{env.PROJECT_NAME}}/${{env.ENVIRONMENT}}/${{secrets.SECRET_NAME}}

            - name: Write Private Key to file
              run: |
                echo "${{ env.PRIVATE_KEY }}" > ${{secrets.KEY_FILE_NAME}}
                chmod 600 ${{secrets.KEY_FILE_NAME}}

            - name: Load Private Key into SSH Agent
              uses: webfactory/ssh-agent@v0.9.0
              with:
                ssh-private-key: ${{ env.PRIVATE_KEY }}

            - name: Install rsync on runner
              run: sudo apt-get update && sudo apt-get install -y rsync

            - name: Setup Ansible
              uses: alex-oleshkevich/setup-ansible@v1.0.1
              with:
                version: "10.7.0"

            - name: Run ansible playbook
              run: |
                ansible-playbook provisioning.yaml
